version: "3.3"
services:
    adr-jwks:
        build: .
        command: node /dist/AdrJwks/start.js
        expose:
            - "8402"
        ports: 
            - 8402:8402
        env_file:
            - sandbox.env
    software-product:
        build: .
        command: node /dist/MockServices/SoftwareProduct/Server/start.js
        expose:
            - "8401"
        ports: 
            - "8401"
        env_file:
            - sandbox.env
    adr-backend:
        build: .
        command: node /dist/AdrGateway/Server/start.js
        expose:
            - "8101"
        ports: 
            - 8101:8101
        env_file:
            - sandbox.env
    adr-frontend:
        build: .
        command: node /dist/AdrServer/Server/start.js
        expose:
            - "8102"
        ports: 
            - "8102"
        env_file:
            - sandbox.env
    adr-housekeeper:
        build: .
        command: node /dist/AdrGateway/Housekeeper/start.js
        env_file:
            - sandbox.env
    mock-register:
        build: .
        command: node /dist/MockServices/Register/Server/start.js
        expose:
            - "8301"
        ports: 
            - "8301"
        env_file:
            - sandbox.env
    mock-dh:
        build: .
        command: node /dist/MockServices/DhServer/Server/start.js
        expose:
            - "8201"
        ports: 
            - "8201"
        env_file:
            - sandbox.env
    mock-infra:
        build: .
        command: node /dist/HttpsProxy/start.js
        expose:
            - "9101"
            - "9102"
            - "9201"
            - "9301"
            - "10201"
            - "10202"
        ports: 
            - 9101:9101
            - 9102:9102
            - 9201:9201
            - 9301:9301
            - 10201:10201
            - 10202:10201
        env_file:
            - sandbox.env

    db:
        image: mariadb
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: example
            MYSQL_DATABASE: adr-sandbox
        ports:
            - 3306:3306

    # log in with user "postgres" and password "example"
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080